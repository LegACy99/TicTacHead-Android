/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-05-23 17:46:09 UTC)
 * on 2013-05-30 at 14:17:17 UTC 
 * Modify at your own risk.
 */

package net.gogo.server.onii.api.tictachead;

/**
 * Service definition for Tictachead (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link TictacheadRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Tictachead extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 14,
        "You are currently running with version %s of google-api-client. " +
        "You need version 1.14 of google-api-client to run version " +
        "1.14.2-beta of the  library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://onii-chan.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "tictachead/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Tictachead(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Tictachead(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getCoupleRoom".
   *
   * This request holds the parameters needed by the the tictachead server.  After setting any
   * optional parameters, call the {@link GetCoupleRoom#execute()} method to invoke the remote
   * operation.
   *
   * @param playerID1
   * @param playerID2
   * @return the request
   */
  public GetCoupleRoom getCoupleRoom(java.lang.Long playerID1, java.lang.Long playerID2) throws java.io.IOException {
    GetCoupleRoom result = new GetCoupleRoom(playerID1, playerID2);
    initialize(result);
    return result;
  }

  public class GetCoupleRoom extends TictacheadRequest<net.gogo.server.onii.api.tictachead.model.Room> {

    private static final String REST_PATH = "room/{playerID1}/{playerID2}";

    /**
     * Create a request for the method "getCoupleRoom".
     *
     * This request holds the parameters needed by the the tictachead server.  After setting any
     * optional parameters, call the {@link GetCoupleRoom#execute()} method to invoke the remote
     * operation. <p> {@link GetCoupleRoom#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param playerID1
     * @param playerID2
     * @since 1.13
     */
    protected GetCoupleRoom(java.lang.Long playerID1, java.lang.Long playerID2) {
      super(Tictachead.this, "GET", REST_PATH, null, net.gogo.server.onii.api.tictachead.model.Room.class);
      this.playerID1 = com.google.api.client.util.Preconditions.checkNotNull(playerID1, "Required parameter playerID1 must be specified.");
      this.playerID2 = com.google.api.client.util.Preconditions.checkNotNull(playerID2, "Required parameter playerID2 must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetCoupleRoom setAlt(java.lang.String alt) {
      return (GetCoupleRoom) super.setAlt(alt);
    }

    @Override
    public GetCoupleRoom setFields(java.lang.String fields) {
      return (GetCoupleRoom) super.setFields(fields);
    }

    @Override
    public GetCoupleRoom setKey(java.lang.String key) {
      return (GetCoupleRoom) super.setKey(key);
    }

    @Override
    public GetCoupleRoom setOauthToken(java.lang.String oauthToken) {
      return (GetCoupleRoom) super.setOauthToken(oauthToken);
    }

    @Override
    public GetCoupleRoom setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetCoupleRoom) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetCoupleRoom setQuotaUser(java.lang.String quotaUser) {
      return (GetCoupleRoom) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetCoupleRoom setUserIp(java.lang.String userIp) {
      return (GetCoupleRoom) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long playerID1;

    /**

     */
    public java.lang.Long getPlayerID1() {
      return playerID1;
    }

    public GetCoupleRoom setPlayerID1(java.lang.Long playerID1) {
      this.playerID1 = playerID1;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long playerID2;

    /**

     */
    public java.lang.Long getPlayerID2() {
      return playerID2;
    }

    public GetCoupleRoom setPlayerID2(java.lang.Long playerID2) {
      this.playerID2 = playerID2;
      return this;
    }

    @Override
    public GetCoupleRoom set(String parameterName, Object value) {
      return (GetCoupleRoom) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getPlayer".
   *
   * This request holds the parameters needed by the the tictachead server.  After setting any
   * optional parameters, call the {@link GetPlayer#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetPlayer getPlayer(java.lang.Long id) throws java.io.IOException {
    GetPlayer result = new GetPlayer(id);
    initialize(result);
    return result;
  }

  public class GetPlayer extends TictacheadRequest<net.gogo.server.onii.api.tictachead.model.Player> {

    private static final String REST_PATH = "player/{id}";

    /**
     * Create a request for the method "getPlayer".
     *
     * This request holds the parameters needed by the the tictachead server.  After setting any
     * optional parameters, call the {@link GetPlayer#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetPlayer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetPlayer(java.lang.Long id) {
      super(Tictachead.this, "GET", REST_PATH, null, net.gogo.server.onii.api.tictachead.model.Player.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetPlayer setAlt(java.lang.String alt) {
      return (GetPlayer) super.setAlt(alt);
    }

    @Override
    public GetPlayer setFields(java.lang.String fields) {
      return (GetPlayer) super.setFields(fields);
    }

    @Override
    public GetPlayer setKey(java.lang.String key) {
      return (GetPlayer) super.setKey(key);
    }

    @Override
    public GetPlayer setOauthToken(java.lang.String oauthToken) {
      return (GetPlayer) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPlayer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetPlayer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPlayer setQuotaUser(java.lang.String quotaUser) {
      return (GetPlayer) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPlayer setUserIp(java.lang.String userIp) {
      return (GetPlayer) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetPlayer setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetPlayer set(String parameterName, Object value) {
      return (GetPlayer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getRoom".
   *
   * This request holds the parameters needed by the the tictachead server.  After setting any
   * optional parameters, call the {@link GetRoom#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetRoom getRoom(java.lang.Long id) throws java.io.IOException {
    GetRoom result = new GetRoom(id);
    initialize(result);
    return result;
  }

  public class GetRoom extends TictacheadRequest<net.gogo.server.onii.api.tictachead.model.Room> {

    private static final String REST_PATH = "room/{id}";

    /**
     * Create a request for the method "getRoom".
     *
     * This request holds the parameters needed by the the tictachead server.  After setting any
     * optional parameters, call the {@link GetRoom#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetRoom#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetRoom(java.lang.Long id) {
      super(Tictachead.this, "GET", REST_PATH, null, net.gogo.server.onii.api.tictachead.model.Room.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetRoom setAlt(java.lang.String alt) {
      return (GetRoom) super.setAlt(alt);
    }

    @Override
    public GetRoom setFields(java.lang.String fields) {
      return (GetRoom) super.setFields(fields);
    }

    @Override
    public GetRoom setKey(java.lang.String key) {
      return (GetRoom) super.setKey(key);
    }

    @Override
    public GetRoom setOauthToken(java.lang.String oauthToken) {
      return (GetRoom) super.setOauthToken(oauthToken);
    }

    @Override
    public GetRoom setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetRoom) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetRoom setQuotaUser(java.lang.String quotaUser) {
      return (GetRoom) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetRoom setUserIp(java.lang.String userIp) {
      return (GetRoom) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetRoom setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetRoom set(String parameterName, Object value) {
      return (GetRoom) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertPlayer".
   *
   * This request holds the parameters needed by the the tictachead server.  After setting any
   * optional parameters, call the {@link InsertPlayer#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link net.gogo.server.onii.api.tictachead.model.Player}
   * @return the request
   */
  public InsertPlayer insertPlayer(net.gogo.server.onii.api.tictachead.model.Player content) throws java.io.IOException {
    InsertPlayer result = new InsertPlayer(content);
    initialize(result);
    return result;
  }

  public class InsertPlayer extends TictacheadRequest<net.gogo.server.onii.api.tictachead.model.Player> {

    private static final String REST_PATH = "player";

    /**
     * Create a request for the method "insertPlayer".
     *
     * This request holds the parameters needed by the the tictachead server.  After setting any
     * optional parameters, call the {@link InsertPlayer#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertPlayer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link net.gogo.server.onii.api.tictachead.model.Player}
     * @since 1.13
     */
    protected InsertPlayer(net.gogo.server.onii.api.tictachead.model.Player content) {
      super(Tictachead.this, "POST", REST_PATH, content, net.gogo.server.onii.api.tictachead.model.Player.class);
    }

    @Override
    public InsertPlayer setAlt(java.lang.String alt) {
      return (InsertPlayer) super.setAlt(alt);
    }

    @Override
    public InsertPlayer setFields(java.lang.String fields) {
      return (InsertPlayer) super.setFields(fields);
    }

    @Override
    public InsertPlayer setKey(java.lang.String key) {
      return (InsertPlayer) super.setKey(key);
    }

    @Override
    public InsertPlayer setOauthToken(java.lang.String oauthToken) {
      return (InsertPlayer) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertPlayer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertPlayer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertPlayer setQuotaUser(java.lang.String quotaUser) {
      return (InsertPlayer) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertPlayer setUserIp(java.lang.String userIp) {
      return (InsertPlayer) super.setUserIp(userIp);
    }

    @Override
    public InsertPlayer set(String parameterName, Object value) {
      return (InsertPlayer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertRoom".
   *
   * This request holds the parameters needed by the the tictachead server.  After setting any
   * optional parameters, call the {@link InsertRoom#execute()} method to invoke the remote operation.
   *
   * @param content the {@link net.gogo.server.onii.api.tictachead.model.Room}
   * @return the request
   */
  public InsertRoom insertRoom(net.gogo.server.onii.api.tictachead.model.Room content) throws java.io.IOException {
    InsertRoom result = new InsertRoom(content);
    initialize(result);
    return result;
  }

  public class InsertRoom extends TictacheadRequest<net.gogo.server.onii.api.tictachead.model.Room> {

    private static final String REST_PATH = "room";

    /**
     * Create a request for the method "insertRoom".
     *
     * This request holds the parameters needed by the the tictachead server.  After setting any
     * optional parameters, call the {@link InsertRoom#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertRoom#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link net.gogo.server.onii.api.tictachead.model.Room}
     * @since 1.13
     */
    protected InsertRoom(net.gogo.server.onii.api.tictachead.model.Room content) {
      super(Tictachead.this, "POST", REST_PATH, content, net.gogo.server.onii.api.tictachead.model.Room.class);
    }

    @Override
    public InsertRoom setAlt(java.lang.String alt) {
      return (InsertRoom) super.setAlt(alt);
    }

    @Override
    public InsertRoom setFields(java.lang.String fields) {
      return (InsertRoom) super.setFields(fields);
    }

    @Override
    public InsertRoom setKey(java.lang.String key) {
      return (InsertRoom) super.setKey(key);
    }

    @Override
    public InsertRoom setOauthToken(java.lang.String oauthToken) {
      return (InsertRoom) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertRoom setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertRoom) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertRoom setQuotaUser(java.lang.String quotaUser) {
      return (InsertRoom) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertRoom setUserIp(java.lang.String userIp) {
      return (InsertRoom) super.setUserIp(userIp);
    }

    @Override
    public InsertRoom set(String parameterName, Object value) {
      return (InsertRoom) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listPlayer".
   *
   * This request holds the parameters needed by the the tictachead server.  After setting any
   * optional parameters, call the {@link ListPlayer#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListPlayer listPlayer() throws java.io.IOException {
    ListPlayer result = new ListPlayer();
    initialize(result);
    return result;
  }

  public class ListPlayer extends TictacheadRequest<net.gogo.server.onii.api.tictachead.model.CollectionResponsePlayer> {

    private static final String REST_PATH = "player";

    /**
     * Create a request for the method "listPlayer".
     *
     * This request holds the parameters needed by the the tictachead server.  After setting any
     * optional parameters, call the {@link ListPlayer#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListPlayer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListPlayer() {
      super(Tictachead.this, "GET", REST_PATH, null, net.gogo.server.onii.api.tictachead.model.CollectionResponsePlayer.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListPlayer setAlt(java.lang.String alt) {
      return (ListPlayer) super.setAlt(alt);
    }

    @Override
    public ListPlayer setFields(java.lang.String fields) {
      return (ListPlayer) super.setFields(fields);
    }

    @Override
    public ListPlayer setKey(java.lang.String key) {
      return (ListPlayer) super.setKey(key);
    }

    @Override
    public ListPlayer setOauthToken(java.lang.String oauthToken) {
      return (ListPlayer) super.setOauthToken(oauthToken);
    }

    @Override
    public ListPlayer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListPlayer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListPlayer setQuotaUser(java.lang.String quotaUser) {
      return (ListPlayer) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListPlayer setUserIp(java.lang.String userIp) {
      return (ListPlayer) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListPlayer setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListPlayer setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListPlayer set(String parameterName, Object value) {
      return (ListPlayer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listRoom".
   *
   * This request holds the parameters needed by the the tictachead server.  After setting any
   * optional parameters, call the {@link ListRoom#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListRoom listRoom() throws java.io.IOException {
    ListRoom result = new ListRoom();
    initialize(result);
    return result;
  }

  public class ListRoom extends TictacheadRequest<net.gogo.server.onii.api.tictachead.model.CollectionResponseRoom> {

    private static final String REST_PATH = "room";

    /**
     * Create a request for the method "listRoom".
     *
     * This request holds the parameters needed by the the tictachead server.  After setting any
     * optional parameters, call the {@link ListRoom#execute()} method to invoke the remote operation.
     * <p> {@link
     * ListRoom#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListRoom() {
      super(Tictachead.this, "GET", REST_PATH, null, net.gogo.server.onii.api.tictachead.model.CollectionResponseRoom.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListRoom setAlt(java.lang.String alt) {
      return (ListRoom) super.setAlt(alt);
    }

    @Override
    public ListRoom setFields(java.lang.String fields) {
      return (ListRoom) super.setFields(fields);
    }

    @Override
    public ListRoom setKey(java.lang.String key) {
      return (ListRoom) super.setKey(key);
    }

    @Override
    public ListRoom setOauthToken(java.lang.String oauthToken) {
      return (ListRoom) super.setOauthToken(oauthToken);
    }

    @Override
    public ListRoom setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListRoom) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListRoom setQuotaUser(java.lang.String quotaUser) {
      return (ListRoom) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListRoom setUserIp(java.lang.String userIp) {
      return (ListRoom) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListRoom setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListRoom setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListRoom set(String parameterName, Object value) {
      return (ListRoom) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removePlayer".
   *
   * This request holds the parameters needed by the the tictachead server.  After setting any
   * optional parameters, call the {@link RemovePlayer#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemovePlayer removePlayer(java.lang.Long id) throws java.io.IOException {
    RemovePlayer result = new RemovePlayer(id);
    initialize(result);
    return result;
  }

  public class RemovePlayer extends TictacheadRequest<net.gogo.server.onii.api.tictachead.model.Player> {

    private static final String REST_PATH = "player/{id}";

    /**
     * Create a request for the method "removePlayer".
     *
     * This request holds the parameters needed by the the tictachead server.  After setting any
     * optional parameters, call the {@link RemovePlayer#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemovePlayer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemovePlayer(java.lang.Long id) {
      super(Tictachead.this, "DELETE", REST_PATH, null, net.gogo.server.onii.api.tictachead.model.Player.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemovePlayer setAlt(java.lang.String alt) {
      return (RemovePlayer) super.setAlt(alt);
    }

    @Override
    public RemovePlayer setFields(java.lang.String fields) {
      return (RemovePlayer) super.setFields(fields);
    }

    @Override
    public RemovePlayer setKey(java.lang.String key) {
      return (RemovePlayer) super.setKey(key);
    }

    @Override
    public RemovePlayer setOauthToken(java.lang.String oauthToken) {
      return (RemovePlayer) super.setOauthToken(oauthToken);
    }

    @Override
    public RemovePlayer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemovePlayer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemovePlayer setQuotaUser(java.lang.String quotaUser) {
      return (RemovePlayer) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemovePlayer setUserIp(java.lang.String userIp) {
      return (RemovePlayer) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemovePlayer setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemovePlayer set(String parameterName, Object value) {
      return (RemovePlayer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeRoom".
   *
   * This request holds the parameters needed by the the tictachead server.  After setting any
   * optional parameters, call the {@link RemoveRoom#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveRoom removeRoom(java.lang.Long id) throws java.io.IOException {
    RemoveRoom result = new RemoveRoom(id);
    initialize(result);
    return result;
  }

  public class RemoveRoom extends TictacheadRequest<net.gogo.server.onii.api.tictachead.model.Room> {

    private static final String REST_PATH = "room/{id}";

    /**
     * Create a request for the method "removeRoom".
     *
     * This request holds the parameters needed by the the tictachead server.  After setting any
     * optional parameters, call the {@link RemoveRoom#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveRoom#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveRoom(java.lang.Long id) {
      super(Tictachead.this, "DELETE", REST_PATH, null, net.gogo.server.onii.api.tictachead.model.Room.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveRoom setAlt(java.lang.String alt) {
      return (RemoveRoom) super.setAlt(alt);
    }

    @Override
    public RemoveRoom setFields(java.lang.String fields) {
      return (RemoveRoom) super.setFields(fields);
    }

    @Override
    public RemoveRoom setKey(java.lang.String key) {
      return (RemoveRoom) super.setKey(key);
    }

    @Override
    public RemoveRoom setOauthToken(java.lang.String oauthToken) {
      return (RemoveRoom) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveRoom setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveRoom) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveRoom setQuotaUser(java.lang.String quotaUser) {
      return (RemoveRoom) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveRoom setUserIp(java.lang.String userIp) {
      return (RemoveRoom) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveRoom setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveRoom set(String parameterName, Object value) {
      return (RemoveRoom) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updatePlayer".
   *
   * This request holds the parameters needed by the the tictachead server.  After setting any
   * optional parameters, call the {@link UpdatePlayer#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link net.gogo.server.onii.api.tictachead.model.Player}
   * @return the request
   */
  public UpdatePlayer updatePlayer(net.gogo.server.onii.api.tictachead.model.Player content) throws java.io.IOException {
    UpdatePlayer result = new UpdatePlayer(content);
    initialize(result);
    return result;
  }

  public class UpdatePlayer extends TictacheadRequest<net.gogo.server.onii.api.tictachead.model.Player> {

    private static final String REST_PATH = "player";

    /**
     * Create a request for the method "updatePlayer".
     *
     * This request holds the parameters needed by the the tictachead server.  After setting any
     * optional parameters, call the {@link UpdatePlayer#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdatePlayer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link net.gogo.server.onii.api.tictachead.model.Player}
     * @since 1.13
     */
    protected UpdatePlayer(net.gogo.server.onii.api.tictachead.model.Player content) {
      super(Tictachead.this, "PUT", REST_PATH, content, net.gogo.server.onii.api.tictachead.model.Player.class);
    }

    @Override
    public UpdatePlayer setAlt(java.lang.String alt) {
      return (UpdatePlayer) super.setAlt(alt);
    }

    @Override
    public UpdatePlayer setFields(java.lang.String fields) {
      return (UpdatePlayer) super.setFields(fields);
    }

    @Override
    public UpdatePlayer setKey(java.lang.String key) {
      return (UpdatePlayer) super.setKey(key);
    }

    @Override
    public UpdatePlayer setOauthToken(java.lang.String oauthToken) {
      return (UpdatePlayer) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdatePlayer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdatePlayer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdatePlayer setQuotaUser(java.lang.String quotaUser) {
      return (UpdatePlayer) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdatePlayer setUserIp(java.lang.String userIp) {
      return (UpdatePlayer) super.setUserIp(userIp);
    }

    @Override
    public UpdatePlayer set(String parameterName, Object value) {
      return (UpdatePlayer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateRoom".
   *
   * This request holds the parameters needed by the the tictachead server.  After setting any
   * optional parameters, call the {@link UpdateRoom#execute()} method to invoke the remote operation.
   *
   * @param content the {@link net.gogo.server.onii.api.tictachead.model.Room}
   * @return the request
   */
  public UpdateRoom updateRoom(net.gogo.server.onii.api.tictachead.model.Room content) throws java.io.IOException {
    UpdateRoom result = new UpdateRoom(content);
    initialize(result);
    return result;
  }

  public class UpdateRoom extends TictacheadRequest<net.gogo.server.onii.api.tictachead.model.Room> {

    private static final String REST_PATH = "room";

    /**
     * Create a request for the method "updateRoom".
     *
     * This request holds the parameters needed by the the tictachead server.  After setting any
     * optional parameters, call the {@link UpdateRoom#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateRoom#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link net.gogo.server.onii.api.tictachead.model.Room}
     * @since 1.13
     */
    protected UpdateRoom(net.gogo.server.onii.api.tictachead.model.Room content) {
      super(Tictachead.this, "PUT", REST_PATH, content, net.gogo.server.onii.api.tictachead.model.Room.class);
    }

    @Override
    public UpdateRoom setAlt(java.lang.String alt) {
      return (UpdateRoom) super.setAlt(alt);
    }

    @Override
    public UpdateRoom setFields(java.lang.String fields) {
      return (UpdateRoom) super.setFields(fields);
    }

    @Override
    public UpdateRoom setKey(java.lang.String key) {
      return (UpdateRoom) super.setKey(key);
    }

    @Override
    public UpdateRoom setOauthToken(java.lang.String oauthToken) {
      return (UpdateRoom) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateRoom setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateRoom) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateRoom setQuotaUser(java.lang.String quotaUser) {
      return (UpdateRoom) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateRoom setUserIp(java.lang.String userIp) {
      return (UpdateRoom) super.setUserIp(userIp);
    }

    @Override
    public UpdateRoom set(String parameterName, Object value) {
      return (UpdateRoom) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Tictachead}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Tictachead}. */
    @Override
    public Tictachead build() {
      return new Tictachead(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link TictacheadRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setTictacheadRequestInitializer(
        TictacheadRequestInitializer tictacheadRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(tictacheadRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
